// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.0--rc2
// source: pkg/pb/auth.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestUserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *RequestUserId) Reset() {
	*x = RequestUserId{}
	mi := &file_pkg_pb_auth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestUserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserId) ProtoMessage() {}

func (x *RequestUserId) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserId.ProtoReflect.Descriptor instead.
func (*RequestUserId) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{0}
}

func (x *RequestUserId) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ResponseErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string `protobuf:"bytes,1,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseErrorMessage) Reset() {
	*x = ResponseErrorMessage{}
	mi := &file_pkg_pb_auth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseErrorMessage) ProtoMessage() {}

func (x *ResponseErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseErrorMessage.ProtoReflect.Descriptor instead.
func (*ResponseErrorMessage) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseErrorMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RequestSetProfileImg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	Img         []byte `protobuf:"bytes,3,opt,name=Img,proto3" json:"Img,omitempty"`
}

func (x *RequestSetProfileImg) Reset() {
	*x = RequestSetProfileImg{}
	mi := &file_pkg_pb_auth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestSetProfileImg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSetProfileImg) ProtoMessage() {}

func (x *RequestSetProfileImg) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSetProfileImg.ProtoReflect.Descriptor instead.
func (*RequestSetProfileImg) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{2}
}

func (x *RequestSetProfileImg) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RequestSetProfileImg) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *RequestSetProfileImg) GetImg() []byte {
	if x != nil {
		return x.Img
	}
	return nil
}

type RequestUserSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	SearchText string `protobuf:"bytes,2,opt,name=SearchText,proto3" json:"SearchText,omitempty"`
	Limit      string `protobuf:"bytes,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset     string `protobuf:"bytes,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *RequestUserSearch) Reset() {
	*x = RequestUserSearch{}
	mi := &file_pkg_pb_auth_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestUserSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserSearch) ProtoMessage() {}

func (x *RequestUserSearch) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserSearch.ProtoReflect.Descriptor instead.
func (*RequestUserSearch) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{3}
}

func (x *RequestUserSearch) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RequestUserSearch) GetSearchText() string {
	if x != nil {
		return x.SearchText
	}
	return ""
}

func (x *RequestUserSearch) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *RequestUserSearch) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type ResponseUserSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errormessage string                        `protobuf:"bytes,1,opt,name=Errormessage,proto3" json:"Errormessage,omitempty"`
	SearchResult []*SingleResponseGetFollowers `protobuf:"bytes,2,rep,name=SearchResult,proto3" json:"SearchResult,omitempty"`
}

func (x *ResponseUserSearch) Reset() {
	*x = ResponseUserSearch{}
	mi := &file_pkg_pb_auth_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseUserSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserSearch) ProtoMessage() {}

func (x *ResponseUserSearch) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserSearch.ProtoReflect.Descriptor instead.
func (*ResponseUserSearch) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{4}
}

func (x *ResponseUserSearch) GetErrormessage() string {
	if x != nil {
		return x.Errormessage
	}
	return ""
}

func (x *ResponseUserSearch) GetSearchResult() []*SingleResponseGetFollowers {
	if x != nil {
		return x.SearchResult
	}
	return nil
}

type SingleResponseGetFollowers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	UserName      string `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	ProfileImgUrl string `protobuf:"bytes,3,opt,name=ProfileImgUrl,proto3" json:"ProfileImgUrl,omitempty"`
	UserId        uint32 `protobuf:"varint,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *SingleResponseGetFollowers) Reset() {
	*x = SingleResponseGetFollowers{}
	mi := &file_pkg_pb_auth_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleResponseGetFollowers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleResponseGetFollowers) ProtoMessage() {}

func (x *SingleResponseGetFollowers) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleResponseGetFollowers.ProtoReflect.Descriptor instead.
func (*SingleResponseGetFollowers) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{5}
}

func (x *SingleResponseGetFollowers) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SingleResponseGetFollowers) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SingleResponseGetFollowers) GetProfileImgUrl() string {
	if x != nil {
		return x.ProfileImgUrl
	}
	return ""
}

func (x *SingleResponseGetFollowers) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ResponseGetUsersDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string                        `protobuf:"bytes,1,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
	UserData     []*SingleResponseGetFollowers `protobuf:"bytes,2,rep,name=UserData,proto3" json:"UserData,omitempty"`
}

func (x *ResponseGetUsersDetails) Reset() {
	*x = ResponseGetUsersDetails{}
	mi := &file_pkg_pb_auth_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseGetUsersDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetUsersDetails) ProtoMessage() {}

func (x *ResponseGetUsersDetails) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetUsersDetails.ProtoReflect.Descriptor instead.
func (*ResponseGetUsersDetails) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{6}
}

func (x *ResponseGetUsersDetails) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ResponseGetUsersDetails) GetUserData() []*SingleResponseGetFollowers {
	if x != nil {
		return x.UserData
	}
	return nil
}

type ResponseBool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExistStatus  bool   `protobuf:"varint,1,opt,name=ExistStatus,proto3" json:"ExistStatus,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseBool) Reset() {
	*x = ResponseBool{}
	mi := &file_pkg_pb_auth_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseBool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseBool) ProtoMessage() {}

func (x *ResponseBool) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseBool.ProtoReflect.Descriptor instead.
func (*ResponseBool) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseBool) GetExistStatus() bool {
	if x != nil {
		return x.ExistStatus
	}
	return false
}

func (x *ResponseBool) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ResponseUserDetailsLite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage      string `protobuf:"bytes,1,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
	UserName          string `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserProfileImgURL string `protobuf:"bytes,3,opt,name=UserProfileImgURL,proto3" json:"UserProfileImgURL,omitempty"`
}

func (x *ResponseUserDetailsLite) Reset() {
	*x = ResponseUserDetailsLite{}
	mi := &file_pkg_pb_auth_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseUserDetailsLite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserDetailsLite) ProtoMessage() {}

func (x *ResponseUserDetailsLite) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserDetailsLite.ProtoReflect.Descriptor instead.
func (*ResponseUserDetailsLite) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{8}
}

func (x *ResponseUserDetailsLite) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ResponseUserDetailsLite) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ResponseUserDetailsLite) GetUserProfileImgURL() string {
	if x != nil {
		return x.UserProfileImgURL
	}
	return ""
}

type RequestEditUserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Bio      string `protobuf:"bytes,3,opt,name=Bio,proto3" json:"Bio,omitempty"`
	Links    string `protobuf:"bytes,4,opt,name=Links,proto3" json:"Links,omitempty"`
	UserId   string `protobuf:"bytes,5,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *RequestEditUserProfile) Reset() {
	*x = RequestEditUserProfile{}
	mi := &file_pkg_pb_auth_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestEditUserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestEditUserProfile) ProtoMessage() {}

func (x *RequestEditUserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestEditUserProfile.ProtoReflect.Descriptor instead.
func (*RequestEditUserProfile) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{9}
}

func (x *RequestEditUserProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestEditUserProfile) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *RequestEditUserProfile) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *RequestEditUserProfile) GetLinks() string {
	if x != nil {
		return x.Links
	}
	return ""
}

func (x *RequestEditUserProfile) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RequestGetUserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserBId string `protobuf:"bytes,2,opt,name=UserBId,proto3" json:"UserBId,omitempty"`
}

func (x *RequestGetUserProfile) Reset() {
	*x = RequestGetUserProfile{}
	mi := &file_pkg_pb_auth_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestGetUserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetUserProfile) ProtoMessage() {}

func (x *RequestGetUserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetUserProfile.ProtoReflect.Descriptor instead.
func (*RequestGetUserProfile) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{10}
}

func (x *RequestGetUserProfile) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RequestGetUserProfile) GetUserBId() string {
	if x != nil {
		return x.UserBId
	}
	return ""
}

type ResponseUserProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	BlueTick        string `protobuf:"bytes,3,opt,name=BlueTick,proto3" json:"BlueTick,omitempty"`
	UserName        string `protobuf:"bytes,4,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Bio             string `protobuf:"bytes,5,opt,name=Bio,proto3" json:"Bio,omitempty"`
	Links           string `protobuf:"bytes,6,opt,name=Links,proto3" json:"Links,omitempty"`
	ProfileImageURL string `protobuf:"bytes,7,opt,name=ProfileImageURL,proto3" json:"ProfileImageURL,omitempty"`
	PostsCount      uint64 `protobuf:"varint,8,opt,name=PostsCount,proto3" json:"PostsCount,omitempty"`
	FollowerCount   uint64 `protobuf:"varint,9,opt,name=FollowerCount,proto3" json:"FollowerCount,omitempty"`
	FollowingCount  uint64 `protobuf:"varint,10,opt,name=FollowingCount,proto3" json:"FollowingCount,omitempty"`
	FollowingStat   bool   `protobuf:"varint,11,opt,name=FollowingStat,proto3" json:"FollowingStat,omitempty"`
	ErrorMessage    string `protobuf:"bytes,12,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseUserProfile) Reset() {
	*x = ResponseUserProfile{}
	mi := &file_pkg_pb_auth_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseUserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserProfile) ProtoMessage() {}

func (x *ResponseUserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserProfile.ProtoReflect.Descriptor instead.
func (*ResponseUserProfile) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseUserProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResponseUserProfile) GetBlueTick() string {
	if x != nil {
		return x.BlueTick
	}
	return ""
}

func (x *ResponseUserProfile) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ResponseUserProfile) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *ResponseUserProfile) GetLinks() string {
	if x != nil {
		return x.Links
	}
	return ""
}

func (x *ResponseUserProfile) GetProfileImageURL() string {
	if x != nil {
		return x.ProfileImageURL
	}
	return ""
}

func (x *ResponseUserProfile) GetPostsCount() uint64 {
	if x != nil {
		return x.PostsCount
	}
	return 0
}

func (x *ResponseUserProfile) GetFollowerCount() uint64 {
	if x != nil {
		return x.FollowerCount
	}
	return 0
}

func (x *ResponseUserProfile) GetFollowingCount() uint64 {
	if x != nil {
		return x.FollowingCount
	}
	return 0
}

func (x *ResponseUserProfile) GetFollowingStat() bool {
	if x != nil {
		return x.FollowingStat
	}
	return false
}

func (x *ResponseUserProfile) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RequestAccessGenerator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
}

func (x *RequestAccessGenerator) Reset() {
	*x = RequestAccessGenerator{}
	mi := &file_pkg_pb_auth_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestAccessGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAccessGenerator) ProtoMessage() {}

func (x *RequestAccessGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAccessGenerator.ProtoReflect.Descriptor instead.
func (*RequestAccessGenerator) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{12}
}

func (x *RequestAccessGenerator) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RequestAccessGenerator) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type ResponseAccessGenerator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccesToken   string `protobuf:"bytes,1,opt,name=AccesToken,proto3" json:"AccesToken,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseAccessGenerator) Reset() {
	*x = ResponseAccessGenerator{}
	mi := &file_pkg_pb_auth_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseAccessGenerator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAccessGenerator) ProtoMessage() {}

func (x *ResponseAccessGenerator) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAccessGenerator.ProtoReflect.Descriptor instead.
func (*ResponseAccessGenerator) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{13}
}

func (x *ResponseAccessGenerator) GetAccesToken() string {
	if x != nil {
		return x.AccesToken
	}
	return ""
}

func (x *ResponseAccessGenerator) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RequestVerifyAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
}

func (x *RequestVerifyAccess) Reset() {
	*x = RequestVerifyAccess{}
	mi := &file_pkg_pb_auth_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestVerifyAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVerifyAccess) ProtoMessage() {}

func (x *RequestVerifyAccess) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVerifyAccess.ProtoReflect.Descriptor instead.
func (*RequestVerifyAccess) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{14}
}

func (x *RequestVerifyAccess) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type ResponseVerifyAccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ErrorMessage string `protobuf:"bytes,1,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseVerifyAccess) Reset() {
	*x = ResponseVerifyAccess{}
	mi := &file_pkg_pb_auth_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseVerifyAccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseVerifyAccess) ProtoMessage() {}

func (x *ResponseVerifyAccess) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseVerifyAccess.ProtoReflect.Descriptor instead.
func (*ResponseVerifyAccess) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{15}
}

func (x *ResponseVerifyAccess) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ResponseVerifyAccess) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RequestResetPass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Otp             string `protobuf:"bytes,1,opt,name=Otp,proto3" json:"Otp,omitempty"`
	Password        string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	ConfirmPassword string `protobuf:"bytes,3,opt,name=ConfirmPassword,proto3" json:"ConfirmPassword,omitempty"`
	TempToken       string `protobuf:"bytes,4,opt,name=TempToken,proto3" json:"TempToken,omitempty"`
}

func (x *RequestResetPass) Reset() {
	*x = RequestResetPass{}
	mi := &file_pkg_pb_auth_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestResetPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestResetPass) ProtoMessage() {}

func (x *RequestResetPass) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestResetPass.ProtoReflect.Descriptor instead.
func (*RequestResetPass) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{16}
}

func (x *RequestResetPass) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

func (x *RequestResetPass) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RequestResetPass) GetConfirmPassword() string {
	if x != nil {
		return x.ConfirmPassword
	}
	return ""
}

func (x *RequestResetPass) GetTempToken() string {
	if x != nil {
		return x.TempToken
	}
	return ""
}

type RequestForgotPass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
}

func (x *RequestForgotPass) Reset() {
	*x = RequestForgotPass{}
	mi := &file_pkg_pb_auth_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestForgotPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestForgotPass) ProtoMessage() {}

func (x *RequestForgotPass) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestForgotPass.ProtoReflect.Descriptor instead.
func (*RequestForgotPass) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{17}
}

func (x *RequestForgotPass) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ResponseForgotPass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token        string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseForgotPass) Reset() {
	*x = ResponseForgotPass{}
	mi := &file_pkg_pb_auth_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseForgotPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseForgotPass) ProtoMessage() {}

func (x *ResponseForgotPass) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseForgotPass.ProtoReflect.Descriptor instead.
func (*ResponseForgotPass) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{18}
}

func (x *ResponseForgotPass) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ResponseForgotPass) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RequestUserLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *RequestUserLogin) Reset() {
	*x = RequestUserLogin{}
	mi := &file_pkg_pb_auth_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestUserLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserLogin) ProtoMessage() {}

func (x *RequestUserLogin) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserLogin.ProtoReflect.Descriptor instead.
func (*RequestUserLogin) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{19}
}

func (x *RequestUserLogin) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *RequestUserLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ResponseUserLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseUserLogin) Reset() {
	*x = ResponseUserLogin{}
	mi := &file_pkg_pb_auth_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseUserLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserLogin) ProtoMessage() {}

func (x *ResponseUserLogin) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserLogin.ProtoReflect.Descriptor instead.
func (*ResponseUserLogin) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{20}
}

func (x *ResponseUserLogin) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ResponseUserLogin) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *ResponseUserLogin) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RequestOtpVefification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TempToken string `protobuf:"bytes,1,opt,name=TempToken,proto3" json:"TempToken,omitempty"`
	Otp       string `protobuf:"bytes,2,opt,name=Otp,proto3" json:"Otp,omitempty"`
}

func (x *RequestOtpVefification) Reset() {
	*x = RequestOtpVefification{}
	mi := &file_pkg_pb_auth_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestOtpVefification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestOtpVefification) ProtoMessage() {}

func (x *RequestOtpVefification) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestOtpVefification.ProtoReflect.Descriptor instead.
func (*RequestOtpVefification) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{21}
}

func (x *RequestOtpVefification) GetTempToken() string {
	if x != nil {
		return x.TempToken
	}
	return ""
}

func (x *RequestOtpVefification) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

type ResponseOtpVerification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=RefreshToken,proto3" json:"RefreshToken,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
	Otp          string `protobuf:"bytes,4,opt,name=Otp,proto3" json:"Otp,omitempty"`
}

func (x *ResponseOtpVerification) Reset() {
	*x = ResponseOtpVerification{}
	mi := &file_pkg_pb_auth_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseOtpVerification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOtpVerification) ProtoMessage() {}

func (x *ResponseOtpVerification) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOtpVerification.ProtoReflect.Descriptor instead.
func (*ResponseOtpVerification) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{22}
}

func (x *ResponseOtpVerification) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ResponseOtpVerification) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *ResponseOtpVerification) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ResponseOtpVerification) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

type SignUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName        string `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email           string `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	Password        string `protobuf:"bytes,5,opt,name=Password,proto3" json:"Password,omitempty"`
	ConfirmPassword string `protobuf:"bytes,6,opt,name=ConfirmPassword,proto3" json:"ConfirmPassword,omitempty"`
}

func (x *SignUpRequest) Reset() {
	*x = SignUpRequest{}
	mi := &file_pkg_pb_auth_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpRequest) ProtoMessage() {}

func (x *SignUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpRequest.ProtoReflect.Descriptor instead.
func (*SignUpRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{23}
}

func (x *SignUpRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SignUpRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SignUpRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SignUpRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SignUpRequest) GetConfirmPassword() string {
	if x != nil {
		return x.ConfirmPassword
	}
	return ""
}

type SignUpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token        string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *SignUpResponse) Reset() {
	*x = SignUpResponse{}
	mi := &file_pkg_pb_auth_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignUpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpResponse) ProtoMessage() {}

func (x *SignUpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpResponse.ProtoReflect.Descriptor instead.
func (*SignUpResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{24}
}

func (x *SignUpResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SignUpResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type AdminLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *AdminLoginRequest) Reset() {
	*x = AdminLoginRequest{}
	mi := &file_pkg_pb_auth_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginRequest) ProtoMessage() {}

func (x *AdminLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginRequest.ProtoReflect.Descriptor instead.
func (*AdminLoginRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{25}
}

func (x *AdminLoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AdminLoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AdminLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token        string `protobuf:"bytes,1,opt,name=Token,proto3" json:"Token,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"` // Use this to communicate login errors
}

func (x *AdminLoginResponse) Reset() {
	*x = AdminLoginResponse{}
	mi := &file_pkg_pb_auth_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginResponse) ProtoMessage() {}

func (x *AdminLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginResponse.ProtoReflect.Descriptor instead.
func (*AdminLoginResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{26}
}

func (x *AdminLoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AdminLoginResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type GetAllUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  string `protobuf:"bytes,1,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset string `protobuf:"bytes,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *GetAllUsersRequest) Reset() {
	*x = GetAllUsersRequest{}
	mi := &file_pkg_pb_auth_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUsersRequest) ProtoMessage() {}

func (x *GetAllUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUsersRequest.ProtoReflect.Descriptor instead.
func (*GetAllUsersRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{27}
}

func (x *GetAllUsersRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *GetAllUsersRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type GetAllUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string               `protobuf:"bytes,1,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
	Users        []*UserAdminResponse `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`
}

func (x *GetAllUsersResponse) Reset() {
	*x = GetAllUsersResponse{}
	mi := &file_pkg_pb_auth_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllUsersResponse) ProtoMessage() {}

func (x *GetAllUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllUsersResponse.ProtoReflect.Descriptor instead.
func (*GetAllUsersResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{28}
}

func (x *GetAllUsersResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAllUsersResponse) GetUsers() []*UserAdminResponse {
	if x != nil {
		return x.Users
	}
	return nil
}

type UserAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` // Changed to uint64 for better compatibility with IDs
	Name            string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	UserName        string `protobuf:"bytes,3,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Email           string `protobuf:"bytes,4,opt,name=Email,proto3" json:"Email,omitempty"`
	Bio             string `protobuf:"bytes,5,opt,name=Bio,proto3" json:"Bio,omitempty"`
	ProfileImageURL string `protobuf:"bytes,6,opt,name=ProfileImageURL,proto3" json:"ProfileImageURL,omitempty"`
	Links           string `protobuf:"bytes,7,opt,name=Links,proto3" json:"Links,omitempty"`
	Status          string `protobuf:"bytes,8,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *UserAdminResponse) Reset() {
	*x = UserAdminResponse{}
	mi := &file_pkg_pb_auth_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAdminResponse) ProtoMessage() {}

func (x *UserAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAdminResponse.ProtoReflect.Descriptor instead.
func (*UserAdminResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{29}
}

func (x *UserAdminResponse) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UserAdminResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserAdminResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserAdminResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserAdminResponse) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *UserAdminResponse) GetProfileImageURL() string {
	if x != nil {
		return x.ProfileImageURL
	}
	return ""
}

func (x *UserAdminResponse) GetLinks() string {
	if x != nil {
		return x.Links
	}
	return ""
}

func (x *UserAdminResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type BlockUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *BlockUserRequest) Reset() {
	*x = BlockUserRequest{}
	mi := &file_pkg_pb_auth_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockUserRequest) ProtoMessage() {}

func (x *BlockUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockUserRequest.ProtoReflect.Descriptor instead.
func (*BlockUserRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{30}
}

func (x *BlockUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UnblockUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *UnblockUserRequest) Reset() {
	*x = UnblockUserRequest{}
	mi := &file_pkg_pb_auth_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnblockUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnblockUserRequest) ProtoMessage() {}

func (x *UnblockUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnblockUserRequest.ProtoReflect.Descriptor instead.
func (*UnblockUserRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{31}
}

func (x *UnblockUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RequestVerifyAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminToken string `protobuf:"bytes,1,opt,name=AdminToken,proto3" json:"AdminToken,omitempty"` // The admin token to be verified
}

func (x *RequestVerifyAdmin) Reset() {
	*x = RequestVerifyAdmin{}
	mi := &file_pkg_pb_auth_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestVerifyAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVerifyAdmin) ProtoMessage() {}

func (x *RequestVerifyAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVerifyAdmin.ProtoReflect.Descriptor instead.
func (*RequestVerifyAdmin) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{32}
}

func (x *RequestVerifyAdmin) GetAdminToken() string {
	if x != nil {
		return x.AdminToken
	}
	return ""
}

// Response message for verifying admin token
type ResponseVerifyAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminEmail   string `protobuf:"bytes,1,opt,name=AdminEmail,proto3" json:"AdminEmail,omitempty"`     // The email of the admin if token is valid
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"` // Error message if token verification fails
}

func (x *ResponseVerifyAdmin) Reset() {
	*x = ResponseVerifyAdmin{}
	mi := &file_pkg_pb_auth_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseVerifyAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseVerifyAdmin) ProtoMessage() {}

func (x *ResponseVerifyAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseVerifyAdmin.ProtoReflect.Descriptor instead.
func (*ResponseVerifyAdmin) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{33}
}

func (x *ResponseVerifyAdmin) GetAdminEmail() string {
	if x != nil {
		return x.AdminEmail
	}
	return ""
}

func (x *ResponseVerifyAdmin) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type GetEmailAndUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID to look up
}

func (x *GetEmailAndUsernameRequest) Reset() {
	*x = GetEmailAndUsernameRequest{}
	mi := &file_pkg_pb_auth_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmailAndUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailAndUsernameRequest) ProtoMessage() {}

func (x *GetEmailAndUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailAndUsernameRequest.ProtoReflect.Descriptor instead.
func (*GetEmailAndUsernameRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{34}
}

func (x *GetEmailAndUsernameRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// The response message containing the email and username
type GetEmailAndUsernameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`       // User email
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` // User username
	Error    string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`       // Error message, if any
}

func (x *GetEmailAndUsernameResponse) Reset() {
	*x = GetEmailAndUsernameResponse{}
	mi := &file_pkg_pb_auth_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEmailAndUsernameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmailAndUsernameResponse) ProtoMessage() {}

func (x *GetEmailAndUsernameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmailAndUsernameResponse.ProtoReflect.Descriptor instead.
func (*GetEmailAndUsernameResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{35}
}

func (x *GetEmailAndUsernameResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetEmailAndUsernameResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetEmailAndUsernameResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Message for CreateBlueTickPayment request
type CreateBlueTickPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID for whom payment is being created
}

func (x *CreateBlueTickPaymentRequest) Reset() {
	*x = CreateBlueTickPaymentRequest{}
	mi := &file_pkg_pb_auth_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBlueTickPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBlueTickPaymentRequest) ProtoMessage() {}

func (x *CreateBlueTickPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBlueTickPaymentRequest.ProtoReflect.Descriptor instead.
func (*CreateBlueTickPaymentRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{36}
}

func (x *CreateBlueTickPaymentRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Message for CreateBlueTickPayment response
type CreateBlueTickPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationId string `protobuf:"bytes,1,opt,name=verification_id,json=verificationId,proto3" json:"verification_id,omitempty"` // Verification ID generated after payment creation// Razorpay order ID
	Message        string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                                     // Any additional message
}

func (x *CreateBlueTickPaymentResponse) Reset() {
	*x = CreateBlueTickPaymentResponse{}
	mi := &file_pkg_pb_auth_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBlueTickPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBlueTickPaymentResponse) ProtoMessage() {}

func (x *CreateBlueTickPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBlueTickPaymentResponse.ProtoReflect.Descriptor instead.
func (*CreateBlueTickPaymentResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{37}
}

func (x *CreateBlueTickPaymentResponse) GetVerificationId() string {
	if x != nil {
		return x.VerificationId
	}
	return ""
}

func (x *CreateBlueTickPaymentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Message for VerifyBlueTickPayment response
// Message for GetBlueTickVerificationStatus request
type GetBlueTickVerificationStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // User ID to retrieve verification status
}

func (x *GetBlueTickVerificationStatusRequest) Reset() {
	*x = GetBlueTickVerificationStatusRequest{}
	mi := &file_pkg_pb_auth_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlueTickVerificationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlueTickVerificationStatusRequest) ProtoMessage() {}

func (x *GetBlueTickVerificationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlueTickVerificationStatusRequest.ProtoReflect.Descriptor instead.
func (*GetBlueTickVerificationStatusRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{38}
}

func (x *GetBlueTickVerificationStatusRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Message for GetBlueTickVerificationStatus response
type GetBlueTickVerificationStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`   // Status of blue tick verification
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Any additional message
}

func (x *GetBlueTickVerificationStatusResponse) Reset() {
	*x = GetBlueTickVerificationStatusResponse{}
	mi := &file_pkg_pb_auth_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlueTickVerificationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlueTickVerificationStatusResponse) ProtoMessage() {}

func (x *GetBlueTickVerificationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlueTickVerificationStatusResponse.ProtoReflect.Descriptor instead.
func (*GetBlueTickVerificationStatusResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{39}
}

func (x *GetBlueTickVerificationStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetBlueTickVerificationStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type VerifyBlueTickPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationId string `protobuf:"bytes,1,opt,name=verification_id,json=verificationId,proto3" json:"verification_id,omitempty"`
	PaymentId      string `protobuf:"bytes,2,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	Signature      string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	UserId         uint32 `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *VerifyBlueTickPaymentRequest) Reset() {
	*x = VerifyBlueTickPaymentRequest{}
	mi := &file_pkg_pb_auth_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyBlueTickPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyBlueTickPaymentRequest) ProtoMessage() {}

func (x *VerifyBlueTickPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyBlueTickPaymentRequest.ProtoReflect.Descriptor instead.
func (*VerifyBlueTickPaymentRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{40}
}

func (x *VerifyBlueTickPaymentRequest) GetVerificationId() string {
	if x != nil {
		return x.VerificationId
	}
	return ""
}

func (x *VerifyBlueTickPaymentRequest) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *VerifyBlueTickPaymentRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *VerifyBlueTickPaymentRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type VerifyBlueTickPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *VerifyBlueTickPaymentResponse) Reset() {
	*x = VerifyBlueTickPaymentResponse{}
	mi := &file_pkg_pb_auth_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyBlueTickPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyBlueTickPaymentResponse) ProtoMessage() {}

func (x *VerifyBlueTickPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyBlueTickPaymentResponse.ProtoReflect.Descriptor instead.
func (*VerifyBlueTickPaymentResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{41}
}

func (x *VerifyBlueTickPaymentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *VerifyBlueTickPaymentResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type BlueTickVerification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  // gorm.Model ID
	UserId          uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                            // User foreign key
	Status          string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                                           // Is verified status
	VerificationId  string `protobuf:"bytes,4,opt,name=verification_id,json=verificationId,proto3" json:"verification_id,omitempty"`     // Unique verification ID
	VerificationFee uint32 `protobuf:"varint,5,opt,name=verification_fee,json=verificationFee,proto3" json:"verification_fee,omitempty"` // Fixed verification fee
}

func (x *BlueTickVerification) Reset() {
	*x = BlueTickVerification{}
	mi := &file_pkg_pb_auth_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlueTickVerification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlueTickVerification) ProtoMessage() {}

func (x *BlueTickVerification) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlueTickVerification.ProtoReflect.Descriptor instead.
func (*BlueTickVerification) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{42}
}

func (x *BlueTickVerification) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BlueTickVerification) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BlueTickVerification) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BlueTickVerification) GetVerificationId() string {
	if x != nil {
		return x.VerificationId
	}
	return ""
}

func (x *BlueTickVerification) GetVerificationFee() uint32 {
	if x != nil {
		return x.VerificationFee
	}
	return 0
}

type OnlinePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                         // User ID to retrieve verification details
	VerificationId string `protobuf:"bytes,2,opt,name=verification_id,json=verificationId,proto3" json:"verification_id,omitempty"` // Verification ID
}

func (x *OnlinePaymentRequest) Reset() {
	*x = OnlinePaymentRequest{}
	mi := &file_pkg_pb_auth_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlinePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlinePaymentRequest) ProtoMessage() {}

func (x *OnlinePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlinePaymentRequest.ProtoReflect.Descriptor instead.
func (*OnlinePaymentRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{43}
}

func (x *OnlinePaymentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OnlinePaymentRequest) GetVerificationId() string {
	if x != nil {
		return x.VerificationId
	}
	return ""
}

type OnlinePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Paymentstatus   string `protobuf:"bytes,2,opt,name=paymentstatus,proto3" json:"paymentstatus,omitempty"`
	Verificationfee string `protobuf:"bytes,3,opt,name=verificationfee,proto3" json:"verificationfee,omitempty"`
}

func (x *OnlinePaymentResponse) Reset() {
	*x = OnlinePaymentResponse{}
	mi := &file_pkg_pb_auth_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnlinePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlinePaymentResponse) ProtoMessage() {}

func (x *OnlinePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlinePaymentResponse.ProtoReflect.Descriptor instead.
func (*OnlinePaymentResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{44}
}

func (x *OnlinePaymentResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OnlinePaymentResponse) GetPaymentstatus() string {
	if x != nil {
		return x.Paymentstatus
	}
	return ""
}

func (x *OnlinePaymentResponse) GetVerificationfee() string {
	if x != nil {
		return x.Verificationfee
	}
	return ""
}

type BlueTickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	BlueTick        string `protobuf:"bytes,2,opt,name=BlueTick,proto3" json:"BlueTick,omitempty"`
	Name            string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	UserName        string `protobuf:"bytes,4,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Email           string `protobuf:"bytes,5,opt,name=Email,proto3" json:"Email,omitempty"`
	Bio             string `protobuf:"bytes,6,opt,name=Bio,proto3" json:"Bio,omitempty"`
	ProfileImageURL string `protobuf:"bytes,7,opt,name=ProfileImageURL,proto3" json:"ProfileImageURL,omitempty"`
	Links           string `protobuf:"bytes,8,opt,name=Links,proto3" json:"Links,omitempty"`
	Status          string `protobuf:"bytes,9,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *BlueTickResponse) Reset() {
	*x = BlueTickResponse{}
	mi := &file_pkg_pb_auth_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlueTickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlueTickResponse) ProtoMessage() {}

func (x *BlueTickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlueTickResponse.ProtoReflect.Descriptor instead.
func (*BlueTickResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{45}
}

func (x *BlueTickResponse) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *BlueTickResponse) GetBlueTick() string {
	if x != nil {
		return x.BlueTick
	}
	return ""
}

func (x *BlueTickResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BlueTickResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *BlueTickResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BlueTickResponse) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *BlueTickResponse) GetProfileImageURL() string {
	if x != nil {
		return x.ProfileImageURL
	}
	return ""
}

func (x *BlueTickResponse) GetLinks() string {
	if x != nil {
		return x.Links
	}
	return ""
}

func (x *BlueTickResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetAllVerifiedUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  string `protobuf:"bytes,1,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset string `protobuf:"bytes,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *GetAllVerifiedUsersRequest) Reset() {
	*x = GetAllVerifiedUsersRequest{}
	mi := &file_pkg_pb_auth_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllVerifiedUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllVerifiedUsersRequest) ProtoMessage() {}

func (x *GetAllVerifiedUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllVerifiedUsersRequest.ProtoReflect.Descriptor instead.
func (*GetAllVerifiedUsersRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{46}
}

func (x *GetAllVerifiedUsersRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *GetAllVerifiedUsersRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type GetAllverifiedUsers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string              `protobuf:"bytes,1,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
	Users        []*BlueTickResponse `protobuf:"bytes,2,rep,name=Users,proto3" json:"Users,omitempty"`
}

func (x *GetAllverifiedUsers) Reset() {
	*x = GetAllverifiedUsers{}
	mi := &file_pkg_pb_auth_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllverifiedUsers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllverifiedUsers) ProtoMessage() {}

func (x *GetAllverifiedUsers) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_auth_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllverifiedUsers.ProtoReflect.Descriptor instead.
func (*GetAllverifiedUsers) Descriptor() ([]byte, []int) {
	return file_pkg_pb_auth_proto_rawDescGZIP(), []int{47}
}

func (x *GetAllverifiedUsers) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetAllverifiedUsers) GetUsers() []*BlueTickResponse {
	if x != nil {
		return x.Users
	}
	return nil
}

var File_pkg_pb_auth_proto protoreflect.FileDescriptor

var file_pkg_pb_auth_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x27, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x62, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x6d, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x49, 0x6d, 0x67, 0x22, 0x79, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a,
	0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x52, 0x0c, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x1a, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x73, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x54, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x87, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4c, 0x69, 0x74, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a,
	0x11, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x55,
	0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x55, 0x52, 0x4c, 0x22, 0x88, 0x01, 0x0a, 0x16,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x69, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x42, 0x69, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x55, 0x73, 0x65, 0x72, 0x42, 0x49,
	0x64, 0x22, 0xeb, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x42, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x42, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x42, 0x69, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x50, 0x6f, 0x73,
	0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x5e, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x5d, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x37,
	0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x52, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x10,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x4f, 0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4f,
	0x74, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x65, 0x6d, 0x70,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x65, 0x6d,
	0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x29, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x46, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x22, 0x4e, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x6f, 0x72,
	0x67, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a,
	0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x44, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x7d, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4f, 0x74, 0x70, 0x56, 0x65, 0x66, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x65, 0x6d, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x65, 0x6d, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x4f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4f, 0x74, 0x70,
	0x22, 0x95, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x74, 0x70,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4f, 0x74, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4f, 0x74, 0x70, 0x22, 0x9b, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67,
	0x6e, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4a, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x45, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x4e, 0x0a, 0x12, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x42, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x6e, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0xd3, 0x01,
	0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x69, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x42, 0x69, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x2a, 0x0a, 0x10, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x2c, 0x0a, 0x12, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a,
	0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x59, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x37, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x24, 0x47, 0x65, 0x74,
	0x42, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x25, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x1c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x42, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x1d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42,
	0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x14, 0x42, 0x6c, 0x75, 0x65, 0x54, 0x69,
	0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x65, 0x65, 0x22, 0x58, 0x0a, 0x14, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x80, 0x01,
	0x0a, 0x15, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x66, 0x65, 0x65,
	0x22, 0xee, 0x01, 0x0a, 0x10, 0x42, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x69, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x42, 0x69, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x52, 0x4c, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x4a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x6d, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x32, 0xdd, 0x11, 0x0a,
	0x0b, 0x41, 0x75, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x12, 0x19, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5e, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x54, 0x50, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4f, 0x74, 0x70,
	0x56, 0x65, 0x66, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x23, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4f, 0x74, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x48, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x1a, 0x1d, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x56, 0x0a, 0x15, 0x46,
	0x6f, 0x72, 0x67, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x1a, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x12, 0x4f, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x1a, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x20, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x5c, 0x0a, 0x11,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x54, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a,
	0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x57, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x55, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x23, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x56, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x1a, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4b, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x59, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x1a, 0x20,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x66, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x4c, 0x69, 0x74, 0x65, 0x46, 0x6f,
	0x72, 0x50, 0x6f, 0x73, 0x74, 0x56, 0x69, 0x65, 0x77, 0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x1a, 0x23, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x4c, 0x69, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x6f, 0x6c,
	0x12, 0x4b, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1d,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x55, 0x6e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1e, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x1a,
	0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x6c, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x75, 0x65, 0x54, 0x69,
	0x63, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x75,
	0x65, 0x54, 0x69, 0x63, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c,
	0x0a, 0x15, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x6c, 0x75, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x0d,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x26, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x48, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x1a, 0x18, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x42, 0x0a, 0x5a, 0x08,
	0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_pb_auth_proto_rawDescOnce sync.Once
	file_pkg_pb_auth_proto_rawDescData = file_pkg_pb_auth_proto_rawDesc
)

func file_pkg_pb_auth_proto_rawDescGZIP() []byte {
	file_pkg_pb_auth_proto_rawDescOnce.Do(func() {
		file_pkg_pb_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_pb_auth_proto_rawDescData)
	})
	return file_pkg_pb_auth_proto_rawDescData
}

var file_pkg_pb_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_pkg_pb_auth_proto_goTypes = []any{
	(*RequestUserId)(nil),                         // 0: auth_proto.RequestUserId
	(*ResponseErrorMessage)(nil),                  // 1: auth_proto.ResponseErrorMessage
	(*RequestSetProfileImg)(nil),                  // 2: auth_proto.RequestSetProfileImg
	(*RequestUserSearch)(nil),                     // 3: auth_proto.RequestUserSearch
	(*ResponseUserSearch)(nil),                    // 4: auth_proto.ResponseUserSearch
	(*SingleResponseGetFollowers)(nil),            // 5: auth_proto.SingleResponseGetFollowers
	(*ResponseGetUsersDetails)(nil),               // 6: auth_proto.ResponseGetUsersDetails
	(*ResponseBool)(nil),                          // 7: auth_proto.ResponseBool
	(*ResponseUserDetailsLite)(nil),               // 8: auth_proto.ResponseUserDetailsLite
	(*RequestEditUserProfile)(nil),                // 9: auth_proto.RequestEditUserProfile
	(*RequestGetUserProfile)(nil),                 // 10: auth_proto.RequestGetUserProfile
	(*ResponseUserProfile)(nil),                   // 11: auth_proto.ResponseUserProfile
	(*RequestAccessGenerator)(nil),                // 12: auth_proto.RequestAccessGenerator
	(*ResponseAccessGenerator)(nil),               // 13: auth_proto.ResponseAccessGenerator
	(*RequestVerifyAccess)(nil),                   // 14: auth_proto.RequestVerifyAccess
	(*ResponseVerifyAccess)(nil),                  // 15: auth_proto.ResponseVerifyAccess
	(*RequestResetPass)(nil),                      // 16: auth_proto.RequestResetPass
	(*RequestForgotPass)(nil),                     // 17: auth_proto.RequestForgotPass
	(*ResponseForgotPass)(nil),                    // 18: auth_proto.ResponseForgotPass
	(*RequestUserLogin)(nil),                      // 19: auth_proto.RequestUserLogin
	(*ResponseUserLogin)(nil),                     // 20: auth_proto.ResponseUserLogin
	(*RequestOtpVefification)(nil),                // 21: auth_proto.RequestOtpVefification
	(*ResponseOtpVerification)(nil),               // 22: auth_proto.ResponseOtpVerification
	(*SignUpRequest)(nil),                         // 23: auth_proto.SignUpRequest
	(*SignUpResponse)(nil),                        // 24: auth_proto.SignUpResponse
	(*AdminLoginRequest)(nil),                     // 25: auth_proto.AdminLoginRequest
	(*AdminLoginResponse)(nil),                    // 26: auth_proto.AdminLoginResponse
	(*GetAllUsersRequest)(nil),                    // 27: auth_proto.GetAllUsersRequest
	(*GetAllUsersResponse)(nil),                   // 28: auth_proto.GetAllUsersResponse
	(*UserAdminResponse)(nil),                     // 29: auth_proto.UserAdminResponse
	(*BlockUserRequest)(nil),                      // 30: auth_proto.BlockUserRequest
	(*UnblockUserRequest)(nil),                    // 31: auth_proto.UnblockUserRequest
	(*RequestVerifyAdmin)(nil),                    // 32: auth_proto.RequestVerifyAdmin
	(*ResponseVerifyAdmin)(nil),                   // 33: auth_proto.ResponseVerifyAdmin
	(*GetEmailAndUsernameRequest)(nil),            // 34: auth_proto.GetEmailAndUsernameRequest
	(*GetEmailAndUsernameResponse)(nil),           // 35: auth_proto.GetEmailAndUsernameResponse
	(*CreateBlueTickPaymentRequest)(nil),          // 36: auth_proto.CreateBlueTickPaymentRequest
	(*CreateBlueTickPaymentResponse)(nil),         // 37: auth_proto.CreateBlueTickPaymentResponse
	(*GetBlueTickVerificationStatusRequest)(nil),  // 38: auth_proto.GetBlueTickVerificationStatusRequest
	(*GetBlueTickVerificationStatusResponse)(nil), // 39: auth_proto.GetBlueTickVerificationStatusResponse
	(*VerifyBlueTickPaymentRequest)(nil),          // 40: auth_proto.VerifyBlueTickPaymentRequest
	(*VerifyBlueTickPaymentResponse)(nil),         // 41: auth_proto.VerifyBlueTickPaymentResponse
	(*BlueTickVerification)(nil),                  // 42: auth_proto.BlueTickVerification
	(*OnlinePaymentRequest)(nil),                  // 43: auth_proto.OnlinePaymentRequest
	(*OnlinePaymentResponse)(nil),                 // 44: auth_proto.OnlinePaymentResponse
	(*BlueTickResponse)(nil),                      // 45: auth_proto.BlueTickResponse
	(*GetAllVerifiedUsersRequest)(nil),            // 46: auth_proto.GetAllVerifiedUsersRequest
	(*GetAllverifiedUsers)(nil),                   // 47: auth_proto.GetAllverifiedUsers
}
var file_pkg_pb_auth_proto_depIdxs = []int32{
	5,  // 0: auth_proto.ResponseUserSearch.SearchResult:type_name -> auth_proto.SingleResponseGetFollowers
	5,  // 1: auth_proto.ResponseGetUsersDetails.UserData:type_name -> auth_proto.SingleResponseGetFollowers
	29, // 2: auth_proto.GetAllUsersResponse.Users:type_name -> auth_proto.UserAdminResponse
	45, // 3: auth_proto.GetAllverifiedUsers.Users:type_name -> auth_proto.BlueTickResponse
	23, // 4: auth_proto.AuthService.UserSignUp:input_type -> auth_proto.SignUpRequest
	21, // 5: auth_proto.AuthService.UserOTPVerification:input_type -> auth_proto.RequestOtpVefification
	19, // 6: auth_proto.AuthService.UserLogin:input_type -> auth_proto.RequestUserLogin
	17, // 7: auth_proto.AuthService.ForgotPasswordRequest:input_type -> auth_proto.RequestForgotPass
	16, // 8: auth_proto.AuthService.ResetPassword:input_type -> auth_proto.RequestResetPass
	14, // 9: auth_proto.AuthService.VerifyAccessToken:input_type -> auth_proto.RequestVerifyAccess
	12, // 10: auth_proto.AuthService.AccessRegenerator:input_type -> auth_proto.RequestAccessGenerator
	10, // 11: auth_proto.AuthService.GetUserProfile:input_type -> auth_proto.RequestGetUserProfile
	9,  // 12: auth_proto.AuthService.EditUserProfile:input_type -> auth_proto.RequestEditUserProfile
	0,  // 13: auth_proto.AuthService.GetFollowersDetails:input_type -> auth_proto.RequestUserId
	0,  // 14: auth_proto.AuthService.GetFollowingsDetails:input_type -> auth_proto.RequestUserId
	3,  // 15: auth_proto.AuthService.SearchUser:input_type -> auth_proto.RequestUserSearch
	2,  // 16: auth_proto.AuthService.SetUserProfileImage:input_type -> auth_proto.RequestSetProfileImg
	34, // 17: auth_proto.AuthService.GetEmailAndUsername:input_type -> auth_proto.GetEmailAndUsernameRequest
	0,  // 18: auth_proto.AuthService.GetUserDetailsLiteForPostView:input_type -> auth_proto.RequestUserId
	0,  // 19: auth_proto.AuthService.CheckUserExist:input_type -> auth_proto.RequestUserId
	25, // 20: auth_proto.AuthService.AdminLogin:input_type -> auth_proto.AdminLoginRequest
	27, // 21: auth_proto.AuthService.GetAllUsers:input_type -> auth_proto.GetAllUsersRequest
	30, // 22: auth_proto.AuthService.BlockUser:input_type -> auth_proto.BlockUserRequest
	31, // 23: auth_proto.AuthService.UnblockUser:input_type -> auth_proto.UnblockUserRequest
	32, // 24: auth_proto.AuthService.VerifyAdminToken:input_type -> auth_proto.RequestVerifyAdmin
	36, // 25: auth_proto.AuthService.CreateBlueTickPayment:input_type -> auth_proto.CreateBlueTickPaymentRequest
	40, // 26: auth_proto.AuthService.VerifyBlueTickPayment:input_type -> auth_proto.VerifyBlueTickPaymentRequest
	43, // 27: auth_proto.AuthService.OnlinePayment:input_type -> auth_proto.OnlinePaymentRequest
	46, // 28: auth_proto.AuthService.GetAllVerifiedUsers:input_type -> auth_proto.GetAllVerifiedUsersRequest
	0,  // 29: auth_proto.AuthService.CheckUserVerified:input_type -> auth_proto.RequestUserId
	24, // 30: auth_proto.AuthService.UserSignUp:output_type -> auth_proto.SignUpResponse
	22, // 31: auth_proto.AuthService.UserOTPVerification:output_type -> auth_proto.ResponseOtpVerification
	20, // 32: auth_proto.AuthService.UserLogin:output_type -> auth_proto.ResponseUserLogin
	18, // 33: auth_proto.AuthService.ForgotPasswordRequest:output_type -> auth_proto.ResponseForgotPass
	1,  // 34: auth_proto.AuthService.ResetPassword:output_type -> auth_proto.ResponseErrorMessage
	15, // 35: auth_proto.AuthService.VerifyAccessToken:output_type -> auth_proto.ResponseVerifyAccess
	13, // 36: auth_proto.AuthService.AccessRegenerator:output_type -> auth_proto.ResponseAccessGenerator
	11, // 37: auth_proto.AuthService.GetUserProfile:output_type -> auth_proto.ResponseUserProfile
	1,  // 38: auth_proto.AuthService.EditUserProfile:output_type -> auth_proto.ResponseErrorMessage
	6,  // 39: auth_proto.AuthService.GetFollowersDetails:output_type -> auth_proto.ResponseGetUsersDetails
	6,  // 40: auth_proto.AuthService.GetFollowingsDetails:output_type -> auth_proto.ResponseGetUsersDetails
	4,  // 41: auth_proto.AuthService.SearchUser:output_type -> auth_proto.ResponseUserSearch
	1,  // 42: auth_proto.AuthService.SetUserProfileImage:output_type -> auth_proto.ResponseErrorMessage
	35, // 43: auth_proto.AuthService.GetEmailAndUsername:output_type -> auth_proto.GetEmailAndUsernameResponse
	8,  // 44: auth_proto.AuthService.GetUserDetailsLiteForPostView:output_type -> auth_proto.ResponseUserDetailsLite
	7,  // 45: auth_proto.AuthService.CheckUserExist:output_type -> auth_proto.ResponseBool
	26, // 46: auth_proto.AuthService.AdminLogin:output_type -> auth_proto.AdminLoginResponse
	28, // 47: auth_proto.AuthService.GetAllUsers:output_type -> auth_proto.GetAllUsersResponse
	1,  // 48: auth_proto.AuthService.BlockUser:output_type -> auth_proto.ResponseErrorMessage
	1,  // 49: auth_proto.AuthService.UnblockUser:output_type -> auth_proto.ResponseErrorMessage
	33, // 50: auth_proto.AuthService.VerifyAdminToken:output_type -> auth_proto.ResponseVerifyAdmin
	37, // 51: auth_proto.AuthService.CreateBlueTickPayment:output_type -> auth_proto.CreateBlueTickPaymentResponse
	41, // 52: auth_proto.AuthService.VerifyBlueTickPayment:output_type -> auth_proto.VerifyBlueTickPaymentResponse
	44, // 53: auth_proto.AuthService.OnlinePayment:output_type -> auth_proto.OnlinePaymentResponse
	47, // 54: auth_proto.AuthService.GetAllVerifiedUsers:output_type -> auth_proto.GetAllverifiedUsers
	7,  // 55: auth_proto.AuthService.CheckUserVerified:output_type -> auth_proto.ResponseBool
	30, // [30:56] is the sub-list for method output_type
	4,  // [4:30] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_pb_auth_proto_init() }
func file_pkg_pb_auth_proto_init() {
	if File_pkg_pb_auth_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_pb_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_pb_auth_proto_goTypes,
		DependencyIndexes: file_pkg_pb_auth_proto_depIdxs,
		MessageInfos:      file_pkg_pb_auth_proto_msgTypes,
	}.Build()
	File_pkg_pb_auth_proto = out.File
	file_pkg_pb_auth_proto_rawDesc = nil
	file_pkg_pb_auth_proto_goTypes = nil
	file_pkg_pb_auth_proto_depIdxs = nil
}
