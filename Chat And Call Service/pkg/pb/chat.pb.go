// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.0--rc2
// source: pkg/pb/chat.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResponseRemoveGroupMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string `protobuf:"bytes,1,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseRemoveGroupMember) Reset() {
	*x = ResponseRemoveGroupMember{}
	mi := &file_pkg_pb_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseRemoveGroupMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRemoveGroupMember) ProtoMessage() {}

func (x *ResponseRemoveGroupMember) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRemoveGroupMember.ProtoReflect.Descriptor instead.
func (*ResponseRemoveGroupMember) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ResponseRemoveGroupMember) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RequestRemoveGroupMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	GroupID  string `protobuf:"bytes,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	MemberID string `protobuf:"bytes,3,opt,name=MemberID,proto3" json:"MemberID,omitempty"`
}

func (x *RequestRemoveGroupMember) Reset() {
	*x = RequestRemoveGroupMember{}
	mi := &file_pkg_pb_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestRemoveGroupMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRemoveGroupMember) ProtoMessage() {}

func (x *RequestRemoveGroupMember) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRemoveGroupMember.ProtoReflect.Descriptor instead.
func (*RequestRemoveGroupMember) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{1}
}

func (x *RequestRemoveGroupMember) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RequestRemoveGroupMember) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *RequestRemoveGroupMember) GetMemberID() string {
	if x != nil {
		return x.MemberID
	}
	return ""
}

type RequestAddGroupMembers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    string   `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	GroupID   string   `protobuf:"bytes,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	MemberIDs []uint64 `protobuf:"varint,3,rep,packed,name=MemberIDs,proto3" json:"MemberIDs,omitempty"`
}

func (x *RequestAddGroupMembers) Reset() {
	*x = RequestAddGroupMembers{}
	mi := &file_pkg_pb_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestAddGroupMembers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAddGroupMembers) ProtoMessage() {}

func (x *RequestAddGroupMembers) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAddGroupMembers.ProtoReflect.Descriptor instead.
func (*RequestAddGroupMembers) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{2}
}

func (x *RequestAddGroupMembers) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RequestAddGroupMembers) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *RequestAddGroupMembers) GetMemberIDs() []uint64 {
	if x != nil {
		return x.MemberIDs
	}
	return nil
}

type ResponseAddGroupMembers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string `protobuf:"bytes,1,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseAddGroupMembers) Reset() {
	*x = ResponseAddGroupMembers{}
	mi := &file_pkg_pb_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseAddGroupMembers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAddGroupMembers) ProtoMessage() {}

func (x *ResponseAddGroupMembers) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAddGroupMembers.ProtoReflect.Descriptor instead.
func (*ResponseAddGroupMembers) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseAddGroupMembers) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RequestGetOneToManyChats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID  string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	GroupID string `protobuf:"bytes,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	Limit   string `protobuf:"bytes,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset  string `protobuf:"bytes,4,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *RequestGetOneToManyChats) Reset() {
	*x = RequestGetOneToManyChats{}
	mi := &file_pkg_pb_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestGetOneToManyChats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetOneToManyChats) ProtoMessage() {}

func (x *RequestGetOneToManyChats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetOneToManyChats.ProtoReflect.Descriptor instead.
func (*RequestGetOneToManyChats) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{4}
}

func (x *RequestGetOneToManyChats) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RequestGetOneToManyChats) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *RequestGetOneToManyChats) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *RequestGetOneToManyChats) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type SingleOneToManyChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID             string `protobuf:"bytes,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	SenderID              string `protobuf:"bytes,2,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	SenderUserName        string `protobuf:"bytes,3,opt,name=SenderUserName,proto3" json:"SenderUserName,omitempty"`
	SenderProfileImageURL string `protobuf:"bytes,4,opt,name=SenderProfileImageURL,proto3" json:"SenderProfileImageURL,omitempty"`
	GroupID               string `protobuf:"bytes,5,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	Content               string `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
	TimeStamp             string `protobuf:"bytes,7,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
}

func (x *SingleOneToManyChat) Reset() {
	*x = SingleOneToManyChat{}
	mi := &file_pkg_pb_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleOneToManyChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleOneToManyChat) ProtoMessage() {}

func (x *SingleOneToManyChat) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleOneToManyChat.ProtoReflect.Descriptor instead.
func (*SingleOneToManyChat) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{5}
}

func (x *SingleOneToManyChat) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *SingleOneToManyChat) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *SingleOneToManyChat) GetSenderUserName() string {
	if x != nil {
		return x.SenderUserName
	}
	return ""
}

func (x *SingleOneToManyChat) GetSenderProfileImageURL() string {
	if x != nil {
		return x.SenderProfileImageURL
	}
	return ""
}

func (x *SingleOneToManyChat) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SingleOneToManyChat) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SingleOneToManyChat) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

type ResponseGetOneToManyChats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chat         []*SingleOneToManyChat `protobuf:"bytes,1,rep,name=Chat,proto3" json:"Chat,omitempty"`
	ErrorMessage string                 `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseGetOneToManyChats) Reset() {
	*x = ResponseGetOneToManyChats{}
	mi := &file_pkg_pb_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseGetOneToManyChats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetOneToManyChats) ProtoMessage() {}

func (x *ResponseGetOneToManyChats) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetOneToManyChats.ProtoReflect.Descriptor instead.
func (*ResponseGetOneToManyChats) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{6}
}

func (x *ResponseGetOneToManyChats) GetChat() []*SingleOneToManyChat {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *ResponseGetOneToManyChats) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type SingleGroupChatDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID              string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	GroupName            string `protobuf:"bytes,2,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	GroupProfileImageURL string `protobuf:"bytes,3,opt,name=GroupProfileImageURL,proto3" json:"GroupProfileImageURL,omitempty"`
	LastMessageContent   string `protobuf:"bytes,4,opt,name=LastMessageContent,proto3" json:"LastMessageContent,omitempty"`
	TimeStamp            string `protobuf:"bytes,5,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	SenderID             string `protobuf:"bytes,6,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	SenderUserName       string `protobuf:"bytes,7,opt,name=SenderUserName,proto3" json:"SenderUserName,omitempty"`
}

func (x *SingleGroupChatDetails) Reset() {
	*x = SingleGroupChatDetails{}
	mi := &file_pkg_pb_chat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleGroupChatDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleGroupChatDetails) ProtoMessage() {}

func (x *SingleGroupChatDetails) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleGroupChatDetails.ProtoReflect.Descriptor instead.
func (*SingleGroupChatDetails) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{7}
}

func (x *SingleGroupChatDetails) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *SingleGroupChatDetails) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *SingleGroupChatDetails) GetGroupProfileImageURL() string {
	if x != nil {
		return x.GroupProfileImageURL
	}
	return ""
}

func (x *SingleGroupChatDetails) GetLastMessageContent() string {
	if x != nil {
		return x.LastMessageContent
	}
	return ""
}

func (x *SingleGroupChatDetails) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

func (x *SingleGroupChatDetails) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *SingleGroupChatDetails) GetSenderUserName() string {
	if x != nil {
		return x.SenderUserName
	}
	return ""
}

type ResponseGroupChatSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SingleEntity []*SingleGroupChatDetails `protobuf:"bytes,1,rep,name=SingleEntity,proto3" json:"SingleEntity,omitempty"`
	ErrorMessage string                    `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseGroupChatSummary) Reset() {
	*x = ResponseGroupChatSummary{}
	mi := &file_pkg_pb_chat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseGroupChatSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGroupChatSummary) ProtoMessage() {}

func (x *ResponseGroupChatSummary) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGroupChatSummary.ProtoReflect.Descriptor instead.
func (*ResponseGroupChatSummary) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{8}
}

func (x *ResponseGroupChatSummary) GetSingleEntity() []*SingleGroupChatDetails {
	if x != nil {
		return x.SingleEntity
	}
	return nil
}

func (x *ResponseGroupChatSummary) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RequestGroupChatSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Limit  string `protobuf:"bytes,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset string `protobuf:"bytes,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *RequestGroupChatSummary) Reset() {
	*x = RequestGroupChatSummary{}
	mi := &file_pkg_pb_chat_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestGroupChatSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroupChatSummary) ProtoMessage() {}

func (x *RequestGroupChatSummary) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroupChatSummary.ProtoReflect.Descriptor instead.
func (*RequestGroupChatSummary) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{9}
}

func (x *RequestGroupChatSummary) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RequestGroupChatSummary) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *RequestGroupChatSummary) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type RequestNewGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName    string   `protobuf:"bytes,1,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	GroupMembers []uint64 `protobuf:"varint,2,rep,packed,name=GroupMembers,proto3" json:"GroupMembers,omitempty"`
	CreatorID    string   `protobuf:"bytes,3,opt,name=CreatorID,proto3" json:"CreatorID,omitempty"`
	CreatedAt    string   `protobuf:"bytes,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *RequestNewGroup) Reset() {
	*x = RequestNewGroup{}
	mi := &file_pkg_pb_chat_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestNewGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestNewGroup) ProtoMessage() {}

func (x *RequestNewGroup) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestNewGroup.ProtoReflect.Descriptor instead.
func (*RequestNewGroup) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{10}
}

func (x *RequestNewGroup) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *RequestNewGroup) GetGroupMembers() []uint64 {
	if x != nil {
		return x.GroupMembers
	}
	return nil
}

func (x *RequestNewGroup) GetCreatorID() string {
	if x != nil {
		return x.CreatorID
	}
	return ""
}

func (x *RequestNewGroup) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type ResponseNewGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string `protobuf:"bytes,1,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseNewGroup) Reset() {
	*x = ResponseNewGroup{}
	mi := &file_pkg_pb_chat_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseNewGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseNewGroup) ProtoMessage() {}

func (x *ResponseNewGroup) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseNewGroup.ProtoReflect.Descriptor instead.
func (*ResponseNewGroup) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{11}
}

func (x *ResponseNewGroup) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RequestGroupMembersInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupID string `protobuf:"bytes,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
}

func (x *RequestGroupMembersInfo) Reset() {
	*x = RequestGroupMembersInfo{}
	mi := &file_pkg_pb_chat_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestGroupMembersInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroupMembersInfo) ProtoMessage() {}

func (x *RequestGroupMembersInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroupMembersInfo.ProtoReflect.Descriptor instead.
func (*RequestGroupMembersInfo) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{12}
}

func (x *RequestGroupMembersInfo) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

type ResponseGroupMembersInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupMembers []string `protobuf:"bytes,1,rep,name=GroupMembers,proto3" json:"GroupMembers,omitempty"`
	ErrorMessage string   `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseGroupMembersInfo) Reset() {
	*x = ResponseGroupMembersInfo{}
	mi := &file_pkg_pb_chat_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseGroupMembersInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGroupMembersInfo) ProtoMessage() {}

func (x *ResponseGroupMembersInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGroupMembersInfo.ProtoReflect.Descriptor instead.
func (*ResponseGroupMembersInfo) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{13}
}

func (x *ResponseGroupMembersInfo) GetGroupMembers() []string {
	if x != nil {
		return x.GroupMembers
	}
	return nil
}

func (x *ResponseGroupMembersInfo) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RequestRecentChatProfiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID string `protobuf:"bytes,1,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	Limit    string `protobuf:"bytes,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset   string `protobuf:"bytes,3,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *RequestRecentChatProfiles) Reset() {
	*x = RequestRecentChatProfiles{}
	mi := &file_pkg_pb_chat_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestRecentChatProfiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRecentChatProfiles) ProtoMessage() {}

func (x *RequestRecentChatProfiles) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRecentChatProfiles.ProtoReflect.Descriptor instead.
func (*RequestRecentChatProfiles) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{14}
}

func (x *RequestRecentChatProfiles) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *RequestRecentChatProfiles) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *RequestRecentChatProfiles) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type SingelUserAndLastChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID               string `protobuf:"bytes,5,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName             string `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserProfileURL       string `protobuf:"bytes,2,opt,name=UserProfileURL,proto3" json:"UserProfileURL,omitempty"`
	LastMessageContent   string `protobuf:"bytes,3,opt,name=LastMessageContent,proto3" json:"LastMessageContent,omitempty"`
	LastMessageTimeStamp string `protobuf:"bytes,4,opt,name=LastMessageTimeStamp,proto3" json:"LastMessageTimeStamp,omitempty"`
}

func (x *SingelUserAndLastChat) Reset() {
	*x = SingelUserAndLastChat{}
	mi := &file_pkg_pb_chat_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingelUserAndLastChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingelUserAndLastChat) ProtoMessage() {}

func (x *SingelUserAndLastChat) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingelUserAndLastChat.ProtoReflect.Descriptor instead.
func (*SingelUserAndLastChat) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{15}
}

func (x *SingelUserAndLastChat) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SingelUserAndLastChat) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SingelUserAndLastChat) GetUserProfileURL() string {
	if x != nil {
		return x.UserProfileURL
	}
	return ""
}

func (x *SingelUserAndLastChat) GetLastMessageContent() string {
	if x != nil {
		return x.LastMessageContent
	}
	return ""
}

func (x *SingelUserAndLastChat) GetLastMessageTimeStamp() string {
	if x != nil {
		return x.LastMessageTimeStamp
	}
	return ""
}

type ResponseRecentChatProfiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorMessage string                   `protobuf:"bytes,1,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
	ActualData   []*SingelUserAndLastChat `protobuf:"bytes,2,rep,name=ActualData,proto3" json:"ActualData,omitempty"`
}

func (x *ResponseRecentChatProfiles) Reset() {
	*x = ResponseRecentChatProfiles{}
	mi := &file_pkg_pb_chat_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseRecentChatProfiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRecentChatProfiles) ProtoMessage() {}

func (x *ResponseRecentChatProfiles) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRecentChatProfiles.ProtoReflect.Descriptor instead.
func (*ResponseRecentChatProfiles) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{16}
}

func (x *ResponseRecentChatProfiles) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ResponseRecentChatProfiles) GetActualData() []*SingelUserAndLastChat {
	if x != nil {
		return x.ActualData
	}
	return nil
}

type RequestUserOneToOneChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID   string `protobuf:"bytes,1,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	RecieverID string `protobuf:"bytes,2,opt,name=RecieverID,proto3" json:"RecieverID,omitempty"`
	Limit      string `protobuf:"bytes,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset     string `protobuf:"bytes,4,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *RequestUserOneToOneChat) Reset() {
	*x = RequestUserOneToOneChat{}
	mi := &file_pkg_pb_chat_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestUserOneToOneChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserOneToOneChat) ProtoMessage() {}

func (x *RequestUserOneToOneChat) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserOneToOneChat.ProtoReflect.Descriptor instead.
func (*RequestUserOneToOneChat) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{17}
}

func (x *RequestUserOneToOneChat) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *RequestUserOneToOneChat) GetRecieverID() string {
	if x != nil {
		return x.RecieverID
	}
	return ""
}

func (x *RequestUserOneToOneChat) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *RequestUserOneToOneChat) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

type SingleOneToOneChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageID  string `protobuf:"bytes,1,opt,name=messageID,proto3" json:"messageID,omitempty"`
	SenderID   string `protobuf:"bytes,2,opt,name=SenderID,proto3" json:"SenderID,omitempty"`
	RecieverID string `protobuf:"bytes,3,opt,name=RecieverID,proto3" json:"RecieverID,omitempty"`
	Content    string `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	Status     string `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`
	TimeStamp  string `protobuf:"bytes,6,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
}

func (x *SingleOneToOneChat) Reset() {
	*x = SingleOneToOneChat{}
	mi := &file_pkg_pb_chat_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleOneToOneChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleOneToOneChat) ProtoMessage() {}

func (x *SingleOneToOneChat) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleOneToOneChat.ProtoReflect.Descriptor instead.
func (*SingleOneToOneChat) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{18}
}

func (x *SingleOneToOneChat) GetMessageID() string {
	if x != nil {
		return x.MessageID
	}
	return ""
}

func (x *SingleOneToOneChat) GetSenderID() string {
	if x != nil {
		return x.SenderID
	}
	return ""
}

func (x *SingleOneToOneChat) GetRecieverID() string {
	if x != nil {
		return x.RecieverID
	}
	return ""
}

func (x *SingleOneToOneChat) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SingleOneToOneChat) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SingleOneToOneChat) GetTimeStamp() string {
	if x != nil {
		return x.TimeStamp
	}
	return ""
}

type ResponseUserOneToOneChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chat         []*SingleOneToOneChat `protobuf:"bytes,1,rep,name=Chat,proto3" json:"Chat,omitempty"`
	ErrorMessage string                `protobuf:"bytes,2,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *ResponseUserOneToOneChat) Reset() {
	*x = ResponseUserOneToOneChat{}
	mi := &file_pkg_pb_chat_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseUserOneToOneChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserOneToOneChat) ProtoMessage() {}

func (x *ResponseUserOneToOneChat) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserOneToOneChat.ProtoReflect.Descriptor instead.
func (*ResponseUserOneToOneChat) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{19}
}

func (x *ResponseUserOneToOneChat) GetChat() []*SingleOneToOneChat {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *ResponseUserOneToOneChat) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type CreateRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRoomRequest) Reset() {
	*x = CreateRoomRequest{}
	mi := &file_pkg_pb_chat_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRequest) ProtoMessage() {}

func (x *CreateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{20}
}

type CreateRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *CreateRoomResponse) Reset() {
	*x = CreateRoomResponse{}
	mi := &file_pkg_pb_chat_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomResponse) ProtoMessage() {}

func (x *CreateRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateRoomResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{21}
}

func (x *CreateRoomResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type GetRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *GetRoomRequest) Reset() {
	*x = GetRoomRequest{}
	mi := &file_pkg_pb_chat_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomRequest) ProtoMessage() {}

func (x *GetRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomRequest.ProtoReflect.Descriptor instead.
func (*GetRoomRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{22}
}

func (x *GetRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type GetRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room *Room `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *GetRoomResponse) Reset() {
	*x = GetRoomResponse{}
	mi := &file_pkg_pb_chat_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomResponse) ProtoMessage() {}

func (x *GetRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomResponse.ProtoReflect.Descriptor instead.
func (*GetRoomResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{23}
}

func (x *GetRoomResponse) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type InsertIntoRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId      string       `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Participant *Participant `protobuf:"bytes,2,opt,name=participant,proto3" json:"participant,omitempty"`
}

func (x *InsertIntoRoomRequest) Reset() {
	*x = InsertIntoRoomRequest{}
	mi := &file_pkg_pb_chat_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertIntoRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertIntoRoomRequest) ProtoMessage() {}

func (x *InsertIntoRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertIntoRoomRequest.ProtoReflect.Descriptor instead.
func (*InsertIntoRoomRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{24}
}

func (x *InsertIntoRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *InsertIntoRoomRequest) GetParticipant() *Participant {
	if x != nil {
		return x.Participant
	}
	return nil
}

type InsertIntoRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *InsertIntoRoomResponse) Reset() {
	*x = InsertIntoRoomResponse{}
	mi := &file_pkg_pb_chat_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertIntoRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertIntoRoomResponse) ProtoMessage() {}

func (x *InsertIntoRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertIntoRoomResponse.ProtoReflect.Descriptor instead.
func (*InsertIntoRoomResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{25}
}

func (x *InsertIntoRoomResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *DeleteRoomRequest) Reset() {
	*x = DeleteRoomRequest{}
	mi := &file_pkg_pb_chat_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoomRequest) ProtoMessage() {}

func (x *DeleteRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoomRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoomRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type DeleteRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteRoomResponse) Reset() {
	*x = DeleteRoomResponse{}
	mi := &file_pkg_pb_chat_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoomResponse) ProtoMessage() {}

func (x *DeleteRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoomResponse.ProtoReflect.Descriptor instead.
func (*DeleteRoomResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteRoomResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Participants []*Participant `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	mi := &file_pkg_pb_chat_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{28}
}

func (x *Room) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Room) GetParticipants() []*Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host         bool   `protobuf:"varint,1,opt,name=host,proto3" json:"host,omitempty"`
	ConnectionId string `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	mi := &file_pkg_pb_chat_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_chat_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_pkg_pb_chat_proto_rawDescGZIP(), []int{29}
}

func (x *Participant) GetHost() bool {
	if x != nil {
		return x.Host
	}
	return false
}

func (x *Participant) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

var File_pkg_pb_chat_proto protoreflect.FileDescriptor

var file_pkg_pb_chat_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x68, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x73, 0x22, 0x3d, 0x0a, 0x17, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7a, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x43,
	0x68, 0x61, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x13, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f,
	0x6e, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34,
	0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x52, 0x4c, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x79, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x43, 0x68,
	0x61, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4d,
	0x61, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x74, 0x52, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x96, 0x02, 0x0a, 0x16, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x68, 0x61, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x2e, 0x0a, 0x12, 0x4c, 0x61, 0x73, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x18, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x4b, 0x0a, 0x0c, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5f, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x8f, 0x01, 0x0a, 0x0f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x36, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x33, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x62, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x65, 0x0a, 0x19,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x15, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x6c, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6e, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x2e, 0x0a, 0x12, 0x4c, 0x61, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x4c, 0x61, 0x73,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x4c, 0x61, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x88, 0x01,
	0x0a, 0x1a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x46, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x65, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x6e, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x0a, 0x41, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x83, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xbe,
	0x01, 0x0a, 0x12, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x69, 0x65, 0x76, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x22,
	0x77, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x43,
	0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x04,
	0x43, 0x68, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2d, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x72, 0x6f,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x70, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49,
	0x6e, 0x74, 0x6f, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x22, 0x32, 0x0a, 0x16, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x49, 0x6e, 0x74, 0x6f, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2c, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x58, 0x0a, 0x04, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63,
	0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x22, 0x46, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x32, 0xc3, 0x09, 0x0a, 0x10,
	0x43, 0x68, 0x61, 0x74, 0x4e, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x67, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x73, 0x12, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x74, 0x1a, 0x29,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x65,
	0x54, 0x6f, 0x4f, 0x6e, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x70, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x2b,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x6a, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x29, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x55, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x21, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x6e,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68,
	0x61, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x1a, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x6a,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x43, 0x68,
	0x61, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74,
	0x4f, 0x6e, 0x65, 0x54, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x74, 0x73, 0x1a, 0x2a,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x54,
	0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x43, 0x68, 0x61, 0x74, 0x73, 0x12, 0x66, 0x0a, 0x11, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x27, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x1a, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x12, 0x6e, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x29, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x2a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x55, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x49, 0x6e, 0x74, 0x6f, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x65,
	0x72, 0x74, 0x49, 0x6e, 0x74, 0x6f, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49, 0x6e, 0x74, 0x6f, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4e,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x4e, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_pb_chat_proto_rawDescOnce sync.Once
	file_pkg_pb_chat_proto_rawDescData = file_pkg_pb_chat_proto_rawDesc
)

func file_pkg_pb_chat_proto_rawDescGZIP() []byte {
	file_pkg_pb_chat_proto_rawDescOnce.Do(func() {
		file_pkg_pb_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_pb_chat_proto_rawDescData)
	})
	return file_pkg_pb_chat_proto_rawDescData
}

var file_pkg_pb_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_pkg_pb_chat_proto_goTypes = []any{
	(*ResponseRemoveGroupMember)(nil),  // 0: chatNcall_proto.ResponseRemoveGroupMember
	(*RequestRemoveGroupMember)(nil),   // 1: chatNcall_proto.RequestRemoveGroupMember
	(*RequestAddGroupMembers)(nil),     // 2: chatNcall_proto.RequestAddGroupMembers
	(*ResponseAddGroupMembers)(nil),    // 3: chatNcall_proto.ResponseAddGroupMembers
	(*RequestGetOneToManyChats)(nil),   // 4: chatNcall_proto.RequestGetOneToManyChats
	(*SingleOneToManyChat)(nil),        // 5: chatNcall_proto.SingleOneToManyChat
	(*ResponseGetOneToManyChats)(nil),  // 6: chatNcall_proto.ResponseGetOneToManyChats
	(*SingleGroupChatDetails)(nil),     // 7: chatNcall_proto.SingleGroupChatDetails
	(*ResponseGroupChatSummary)(nil),   // 8: chatNcall_proto.ResponseGroupChatSummary
	(*RequestGroupChatSummary)(nil),    // 9: chatNcall_proto.RequestGroupChatSummary
	(*RequestNewGroup)(nil),            // 10: chatNcall_proto.RequestNewGroup
	(*ResponseNewGroup)(nil),           // 11: chatNcall_proto.ResponseNewGroup
	(*RequestGroupMembersInfo)(nil),    // 12: chatNcall_proto.RequestGroupMembersInfo
	(*ResponseGroupMembersInfo)(nil),   // 13: chatNcall_proto.ResponseGroupMembersInfo
	(*RequestRecentChatProfiles)(nil),  // 14: chatNcall_proto.RequestRecentChatProfiles
	(*SingelUserAndLastChat)(nil),      // 15: chatNcall_proto.SingelUserAndLastChat
	(*ResponseRecentChatProfiles)(nil), // 16: chatNcall_proto.ResponseRecentChatProfiles
	(*RequestUserOneToOneChat)(nil),    // 17: chatNcall_proto.RequestUserOneToOneChat
	(*SingleOneToOneChat)(nil),         // 18: chatNcall_proto.SingleOneToOneChat
	(*ResponseUserOneToOneChat)(nil),   // 19: chatNcall_proto.ResponseUserOneToOneChat
	(*CreateRoomRequest)(nil),          // 20: chatNcall_proto.CreateRoomRequest
	(*CreateRoomResponse)(nil),         // 21: chatNcall_proto.CreateRoomResponse
	(*GetRoomRequest)(nil),             // 22: chatNcall_proto.GetRoomRequest
	(*GetRoomResponse)(nil),            // 23: chatNcall_proto.GetRoomResponse
	(*InsertIntoRoomRequest)(nil),      // 24: chatNcall_proto.InsertIntoRoomRequest
	(*InsertIntoRoomResponse)(nil),     // 25: chatNcall_proto.InsertIntoRoomResponse
	(*DeleteRoomRequest)(nil),          // 26: chatNcall_proto.DeleteRoomRequest
	(*DeleteRoomResponse)(nil),         // 27: chatNcall_proto.DeleteRoomResponse
	(*Room)(nil),                       // 28: chatNcall_proto.Room
	(*Participant)(nil),                // 29: chatNcall_proto.Participant
}
var file_pkg_pb_chat_proto_depIdxs = []int32{
	5,  // 0: chatNcall_proto.ResponseGetOneToManyChats.Chat:type_name -> chatNcall_proto.SingleOneToManyChat
	7,  // 1: chatNcall_proto.ResponseGroupChatSummary.SingleEntity:type_name -> chatNcall_proto.SingleGroupChatDetails
	15, // 2: chatNcall_proto.ResponseRecentChatProfiles.ActualData:type_name -> chatNcall_proto.SingelUserAndLastChat
	18, // 3: chatNcall_proto.ResponseUserOneToOneChat.Chat:type_name -> chatNcall_proto.SingleOneToOneChat
	28, // 4: chatNcall_proto.GetRoomResponse.room:type_name -> chatNcall_proto.Room
	29, // 5: chatNcall_proto.InsertIntoRoomRequest.participant:type_name -> chatNcall_proto.Participant
	29, // 6: chatNcall_proto.Room.participants:type_name -> chatNcall_proto.Participant
	17, // 7: chatNcall_proto.ChatNCallService.GetOneToOneChats:input_type -> chatNcall_proto.RequestUserOneToOneChat
	14, // 8: chatNcall_proto.ChatNCallService.GetRecentChatProfiles:input_type -> chatNcall_proto.RequestRecentChatProfiles
	12, // 9: chatNcall_proto.ChatNCallService.GetGroupMembersInfo:input_type -> chatNcall_proto.RequestGroupMembersInfo
	10, // 10: chatNcall_proto.ChatNCallService.CreateNewGroup:input_type -> chatNcall_proto.RequestNewGroup
	9,  // 11: chatNcall_proto.ChatNCallService.GetUserGroupChatSummary:input_type -> chatNcall_proto.RequestGroupChatSummary
	4,  // 12: chatNcall_proto.ChatNCallService.GetOneToManyChats:input_type -> chatNcall_proto.RequestGetOneToManyChats
	2,  // 13: chatNcall_proto.ChatNCallService.AddMembersToGroup:input_type -> chatNcall_proto.RequestAddGroupMembers
	1,  // 14: chatNcall_proto.ChatNCallService.RemoveMemberFromGroup:input_type -> chatNcall_proto.RequestRemoveGroupMember
	20, // 15: chatNcall_proto.ChatNCallService.CreateRoom:input_type -> chatNcall_proto.CreateRoomRequest
	22, // 16: chatNcall_proto.ChatNCallService.GetRoom:input_type -> chatNcall_proto.GetRoomRequest
	24, // 17: chatNcall_proto.ChatNCallService.InsertIntoRoom:input_type -> chatNcall_proto.InsertIntoRoomRequest
	26, // 18: chatNcall_proto.ChatNCallService.DeleteRoom:input_type -> chatNcall_proto.DeleteRoomRequest
	19, // 19: chatNcall_proto.ChatNCallService.GetOneToOneChats:output_type -> chatNcall_proto.ResponseUserOneToOneChat
	16, // 20: chatNcall_proto.ChatNCallService.GetRecentChatProfiles:output_type -> chatNcall_proto.ResponseRecentChatProfiles
	13, // 21: chatNcall_proto.ChatNCallService.GetGroupMembersInfo:output_type -> chatNcall_proto.ResponseGroupMembersInfo
	11, // 22: chatNcall_proto.ChatNCallService.CreateNewGroup:output_type -> chatNcall_proto.ResponseNewGroup
	8,  // 23: chatNcall_proto.ChatNCallService.GetUserGroupChatSummary:output_type -> chatNcall_proto.ResponseGroupChatSummary
	6,  // 24: chatNcall_proto.ChatNCallService.GetOneToManyChats:output_type -> chatNcall_proto.ResponseGetOneToManyChats
	3,  // 25: chatNcall_proto.ChatNCallService.AddMembersToGroup:output_type -> chatNcall_proto.ResponseAddGroupMembers
	0,  // 26: chatNcall_proto.ChatNCallService.RemoveMemberFromGroup:output_type -> chatNcall_proto.ResponseRemoveGroupMember
	21, // 27: chatNcall_proto.ChatNCallService.CreateRoom:output_type -> chatNcall_proto.CreateRoomResponse
	23, // 28: chatNcall_proto.ChatNCallService.GetRoom:output_type -> chatNcall_proto.GetRoomResponse
	25, // 29: chatNcall_proto.ChatNCallService.InsertIntoRoom:output_type -> chatNcall_proto.InsertIntoRoomResponse
	27, // 30: chatNcall_proto.ChatNCallService.DeleteRoom:output_type -> chatNcall_proto.DeleteRoomResponse
	19, // [19:31] is the sub-list for method output_type
	7,  // [7:19] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_pkg_pb_chat_proto_init() }
func file_pkg_pb_chat_proto_init() {
	if File_pkg_pb_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_pb_chat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_pb_chat_proto_goTypes,
		DependencyIndexes: file_pkg_pb_chat_proto_depIdxs,
		MessageInfos:      file_pkg_pb_chat_proto_msgTypes,
	}.Build()
	File_pkg_pb_chat_proto = out.File
	file_pkg_pb_chat_proto_rawDesc = nil
	file_pkg_pb_chat_proto_goTypes = nil
	file_pkg_pb_chat_proto_depIdxs = nil
}
